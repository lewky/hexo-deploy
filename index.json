[{"categories":["Hugo系列"],"content":"背景 本文基于LoveIt主题【v0.2.10】，且所使用的Hugo版本如下，不同版本且不同主题可能无法适用某些属性： \u003ehugo version Hugo Static Site Generator v0.74.2-48565DE6 windows/amd64 BuildDate: 2020-07-17T17:22:50Z ","date":"2020-10-10","objectID":"/posts/hugo-3.html/:1:0","tags":["Hugo","个性化配置"],"title":"Hugo系列(3) - 通过配置文件来定制个人站点","uri":"/posts/hugo-3.html/"},{"categories":["Hugo系列"],"content":"配置文件 Hugo默认使用根目录下的config.toml、config.yaml或config.json中的某一个作为站点的配置文件，可以通过--config来配置读取一个或多个配置文件，如下： hugo --config debugconfig.toml hugo --config a.toml,b.toml,c.toml ","date":"2020-10-10","objectID":"/posts/hugo-3.html/:2:0","tags":["Hugo","个性化配置"],"title":"Hugo系列(3) - 通过配置文件来定制个人站点","uri":"/posts/hugo-3.html/"},{"categories":["Hugo系列"],"content":"配置文件的目录 除了使用单一的站点配置文件，还可以通过使用configDir变量（默认值为config/）来维护不同环境下的各组件的配置文件： 每个文件各自对应配置文件的根对象，比如Params, Menus, Languages等。 每个子目录对应不同的环境配置，类似于Maven的Profile功能。 这些文件可以应用国际化功能，即区分不同的语言版本。 下面是一个简单的例子： ├── config │ ├── _default │ │ ├── config.toml │ │ ├── languages.toml │ │ ├── menus.en.toml │ │ ├── menus.zh.toml │ │ └── params.toml │ ├── production │ │ ├── config.toml │ │ └── params.toml │ └── staging │ ├── config.toml │ └── params.toml 可以发现上述的结构中，存在着三种不同的环境配置：_default默认环境、production生成环境、staging演示环境。_default下的配置是通用配置，Hugo每次生成站点时都会读取。如果运行hugo --environment staging，则还会额外合并staging的配置（会替换_default下冲突的配置）。 一般情况下我们用不到多环境的功能，只需要在站点根目录下存放一个config.toml文件，直接在该配置文件中指定各种属性，就可以实现相当程度的个性化了。下面是一些常用的配置文件的属性的用法，这些属性都是配置在站点配置文件里的。 ","date":"2020-10-10","objectID":"/posts/hugo-3.html/:3:0","tags":["Hugo","个性化配置"],"title":"Hugo系列(3) - 通过配置文件来定制个人站点","uri":"/posts/hugo-3.html/"},{"categories":["Hugo系列"],"content":"theme主题属性 配置你的Hugo主题款式，本文基于LoveIt主题【v0.2.10】，所以配置是： theme = \"LoveIt\" ","date":"2020-10-10","objectID":"/posts/hugo-3.html/:4:0","tags":["Hugo","个性化配置"],"title":"Hugo系列(3) - 通过配置文件来定制个人站点","uri":"/posts/hugo-3.html/"},{"categories":["Hugo系列"],"content":"网站路径相关的属性 ","date":"2020-10-10","objectID":"/posts/hugo-3.html/:5:0","tags":["Hugo","个性化配置"],"title":"Hugo系列(3) - 通过配置文件来定制个人站点","uri":"/posts/hugo-3.html/"},{"categories":["Hugo系列"],"content":"baseURL 网站的根路径，用法如下： baseURL = \"https://mySite.com/\" ","date":"2020-10-10","objectID":"/posts/hugo-3.html/:5:1","tags":["Hugo","个性化配置"],"title":"Hugo系列(3) - 通过配置文件来定制个人站点","uri":"/posts/hugo-3.html/"},{"categories":["Hugo系列"],"content":"disablePathToLower 是否禁止将网站路径转换成小写，建议设置成true： disablePathToLower = true ","date":"2020-10-10","objectID":"/posts/hugo-3.html/:5:2","tags":["Hugo","个性化配置"],"title":"Hugo系列(3) - 通过配置文件来定制个人站点","uri":"/posts/hugo-3.html/"},{"categories":["Hugo系列"],"content":"permalinks 生成的文章的路径，默认配置如下： [permalinks] posts = \"/:year/:month/:title/\" 这里可以使用的变量如下： :year：4位数的年份 :month：2位数的月份 :monthname：月份名字 :day：2位数的日期 :weekday：1位数，每周的第几天，星期日对应0 :weekdayname：星期几 :yearday：1到3位数，每年的第几天 :section：当前文章对应的section分类 :sections：当前文章对应的完整的section分类层次 :title：文章的标题 :slug：文章的slug，和title一样是定义在文件头里的属性，当没有定义slug时会使用title作为url :filename：文章的文件名，不包括文件扩展名。 出于seo考虑，不建议在url里加上年月日之类的，由于标题大多有中文或者特殊字符，所以也不建议直接使用标题作为url的一部分。这里建议使用slug的方式，自己手动给每篇文章提取若干个关键词作为slug，以此作为url的一部分，如下： [permalinks] posts = \"/posts/:slug.html\" 然后文章的slug可以这样配置**（permalinks是配置在站点配置文件里的，slug是配置在每篇文章的文件头里的）**： --- title: 建站日志 slug: e62c38c45 --- 我这里是因为文章是从hexo迁移过来的，hexo那边使用了abbrlink插件来生成随机且不重复的名字，为了和之前的文章url对齐就这样配置了。而hugo没有找到类似的插件，所以选择了slug来自定义url，这个功能倒是和博客园的自定义博文的url类似。 另外值得一提的是，默认用的是pretty Url的配置，所有url的末尾都有个/，而Hexo那边url末尾是没有这个/的，算是一点小小的不同。 ","date":"2020-10-10","objectID":"/posts/hugo-3.html/:5:3","tags":["Hugo","个性化配置"],"title":"Hugo系列(3) - 通过配置文件来定制个人站点","uri":"/posts/hugo-3.html/"},{"categories":["Hugo系列"],"content":"uglyurls 这个属性针对默认的pretty Url，比如有个url是/posts/e62c38c45/。如果设置了uglyurls = true，则会把末尾的/改成.html，新的url就变成了/posts/e62c38c45.html。但是这个属性有个问题，它会把文章以外的url也变成这种“丑陋”的格式，比如分类、标签等url，这样就不美观了。 所以不推荐使用该属性，如果希望文章的url不是纯目录格式的，可以像上文的permalinks那样配置。 ","date":"2020-10-10","objectID":"/posts/hugo-3.html/:5:4","tags":["Hugo","个性化配置"],"title":"Hugo系列(3) - 通过配置文件来定制个人站点","uri":"/posts/hugo-3.html/"},{"categories":["Hugo系列"],"content":"markup标记属性 配置markdown解析器、代码块高亮、文章目录等。 ","date":"2020-10-10","objectID":"/posts/hugo-3.html/:6:0","tags":["Hugo","个性化配置"],"title":"Hugo系列(3) - 通过配置文件来定制个人站点","uri":"/posts/hugo-3.html/"},{"categories":["Hugo系列"],"content":"markdown解析器 Hugo提供了asciidocExt、blackFriday和goldmark三种markdown解析器，默认使用goldmark来解析markdown，如下： markup: asciidocExt: attributes: {} backend: html5 extensions: [] failureLevel: fatal noHeaderOrFooter: true safeMode: unsafe sectionNumbers: false trace: false verbose: false workingFolderCurrent: false blackFriday: angledQuotes: false extensions: null extensionsMask: null footnoteAnchorPrefix: \"\" footnoteReturnLinkContents: \"\" fractions: true hrefTargetBlank: false latexDashes: true nofollowLinks: false noreferrerLinks: false plainIDAnchors: true skipHTML: false smartDashes: true smartypants: true smartypantsQuotesNBSP: false taskLists: true defaultMarkdownHandler: goldmark goldmark: extensions: definitionList: true footnote: true linkify: true strikethrough: true table: true taskList: true typographer: true parser: attribute: true autoHeadingID: true autoHeadingIDType: github renderer: hardWraps: false unsafe: false xhtml: false ","date":"2020-10-10","objectID":"/posts/hugo-3.html/:6:1","tags":["Hugo","个性化配置"],"title":"Hugo系列(3) - 通过配置文件来定制个人站点","uri":"/posts/hugo-3.html/"},{"categories":["Hugo系列"],"content":"Highlight代码高亮 hugo默认的配置如下： markup: highlight: anchorLineNos: false codeFences: true guessSyntax: false hl_Lines: \"\" lineAnchors: \"\" lineNoStart: 1 lineNos: false lineNumbersInTable: true noClasses: true style: monokai tabWidth: 4 guessSyntax：自动推断代码属于某种语言。 hl_Lines：仅在使用goldmark解析器时该属性才起效，表示对某几行代码进行高亮处理，比如： lineAnchors: \"2\"表示第二行代码高亮； lineAnchors: \"1-8\"表示第一到八行代码高亮； lineAnchors: \"1 3\"表示第一行和第三行代码高亮。 lineNoStart：表示行数从多少开始计数。 lineNos：配置行数，false表示不显示行数。 lineNumbersInTable：值为true时可以在显示行数时提供友好的代码块复制黏贴功能。 ","date":"2020-10-10","objectID":"/posts/hugo-3.html/:6:2","tags":["Hugo","个性化配置"],"title":"Hugo系列(3) - 通过配置文件来定制个人站点","uri":"/posts/hugo-3.html/"},{"categories":["Hugo系列"],"content":"Table Of Contents文章目录 配置如下： markup: tableOfContents: endLevel: 3 ordered: false startLevel: 2 startLevel：从几级标题开始生成目录，值为2表示从h2开始生成目录。 endLevel：到几级标题为止生成目录，值为3表示大于h3的标题就不再生成目录。 ordered：是否生成排序目录，建议启用该功能，生成的目录会更为美观。 ","date":"2020-10-10","objectID":"/posts/hugo-3.html/:6:3","tags":["Hugo","个性化配置"],"title":"Hugo系列(3) - 通过配置文件来定制个人站点","uri":"/posts/hugo-3.html/"},{"categories":["Hugo系列"],"content":"补充一个完整的toml格式的markup配置 上面分别给出了yaml格式的3种配置，下面是对应toml格式的完整配置： [markup] defaultMarkdownHandler = \"goldmark\" [markup.asciidocExt] backend = \"html5\" extensions = [] failureLevel = \"fatal\" noHeaderOrFooter = true safeMode = \"unsafe\" sectionNumbers = false trace = false verbose = false workingFolderCurrent = false [markup.asciidocExt.attributes] [markup.blackFriday] angledQuotes = false footnoteAnchorPrefix = \"\" footnoteReturnLinkContents = \"\" fractions = true hrefTargetBlank = false latexDashes = true nofollowLinks = false noreferrerLinks = false plainIDAnchors = true skipHTML = false smartDashes = true smartypants = true smartypantsQuotesNBSP = false taskLists = true [markup.goldmark] [markup.goldmark.extensions] definitionList = true footnote = true linkify = true strikethrough = true table = true taskList = true typographer = true [markup.goldmark.parser] attribute = true autoHeadingID = true autoHeadingIDType = \"github\" [markup.goldmark.renderer] hardWraps = false unsafe = false xhtml = false [markup.highlight] anchorLineNos = false codeFences = true guessSyntax = false hl_Lines = \"\" lineAnchors = \"\" lineNoStart = 1 lineNos = false lineNumbersInTable = true noClasses = true style = \"monokai\" tabWidth = 4 [markup.tableOfContents] endLevel = 3 ordered = false startLevel = 2 ","date":"2020-10-10","objectID":"/posts/hugo-3.html/:6:4","tags":["Hugo","个性化配置"],"title":"Hugo系列(3) - 通过配置文件来定制个人站点","uri":"/posts/hugo-3.html/"},{"categories":["Hugo系列"],"content":"menu菜单属性 侧边栏菜单是在配置文件里配置的，如下： [menu] [[menu.main]] identifier = \"about\" name = \"\u003ci class='fa fa-heart'\u003e\u003c/i\u003eabout hugo\" url = \"/about/\" weight = -110 [[menu.main]] identifier = \"start\" name = \"getting started\" post = \"\u003cspan class='alert'\u003eNew!\u003c/span\u003e\" pre = \"\u003ci class='fa fa-road'\u003e\u003c/i\u003e\" url = \"/getting-started/\" weight = -100 identifier的值不能重复。 weight是比重，值越小则该菜单的位置越靠上面。 name是菜单名字。 pre和post分别对应当前菜单的前缀和后缀，可以定义fontawesome等图标。 ","date":"2020-10-10","objectID":"/posts/hugo-3.html/:7:0","tags":["Hugo","个性化配置"],"title":"Hugo系列(3) - 通过配置文件来定制个人站点","uri":"/posts/hugo-3.html/"},{"categories":["Hugo系列"],"content":"languages语言属性 该属性可以提高站点的国际化功能，即区分多语言版本的站点，比如若设定了en、zh两个语言，设定默认语言是zh；则默认的站点url的根目录后会加上/zh/，并可以通过站点首页的切换语言下拉框来切换到其他语音，如：/en/。 languages一般用来跟上面的menu一起配合使用，如下： [Languages] [Languages.en] title = \"Yulin Lewis' Blog\" weight = 1 languageName = \"English\" [[Languages.en.menu.main]] name = \"\u003ci class='fab fa-fw fa-github'\u003e\u003c/i\u003e GitHub\" identifier = \"github\" url = \"https://github.com/lewky\" weight = 1 [Languages.zh] title = \"雨临Lewis的博客\" weight = 2 languageName = \"简体中文\" [[Languages.zh.menu.main]] name = \"\u003ci class='fab fa-fw fa-github'\u003e\u003c/i\u003e GitHub\" identifier = \"github\" url = \"https://github.com/lewky\" weight = 1 此外，也可以将languages和params搭配使用，用法和上面类似，其实就是在这些属性的前面加上languages前缀而已。但是不知道为什么，在本文背景里提及的hugo和LoveIt版本下，站点无法正常读取到多语言参数，比如[languages.zh-cn.params]这种属性会读取不了。 ","date":"2020-10-10","objectID":"/posts/hugo-3.html/:8:0","tags":["Hugo","个性化配置"],"title":"Hugo系列(3) - 通过配置文件来定制个人站点","uri":"/posts/hugo-3.html/"},{"categories":["Hugo系列"],"content":"minify压缩属性 该属性用于压缩站点的各种静态资源，比如html、css、json、xml等，官方的默认配置如下： [minify] disableCSS = false disableHTML = false disableJS = false disableJSON = false disableSVG = false disableXML = false minifyOutput = false [minify.tdewolff] [minify.tdewolff.css] decimals = -1 keepCSS2 = true [minify.tdewolff.html] keepConditionalComments = true keepDefaultAttrVals = true keepDocumentTags = true keepEndTags = true keepQuotes = false keepWhitespace = false [minify.tdewolff.js] [minify.tdewolff.json] [minify.tdewolff.svg] decimals = -1 [minify.tdewolff.xml] keepWhitespace = false 但实际上在配置文件中加入上述的配置并没有效果，也无法进行修改，这可能是个bug，因为和启用压缩的命令参数冲突了。不过从上面的配置可以看出，hugo自带的压缩功能是默认会压缩CSS、HTML、JS、JSON、SVG、XML；并且在压缩HTML的时候会保留注释、属性、文档标签和闭合标签，但是会去掉引号和空格。 如果想启用压缩功能，可以运行如下命令（记得运行前要先删掉public目录）： hugo --minify 也可以直接把这个参数配置到配置文件中，这样就可以不在运行命令时指定压缩参数： minify = true ","date":"2020-10-10","objectID":"/posts/hugo-3.html/:9:0","tags":["Hugo","个性化配置"],"title":"Hugo系列(3) - 通过配置文件来定制个人站点","uri":"/posts/hugo-3.html/"},{"categories":["Hugo系列"],"content":"参考链接 Configure Hugo Syntax Highlighting Menus Multilingual Mode ","date":"2020-10-10","objectID":"/posts/hugo-3.html/:10:0","tags":["Hugo","个性化配置"],"title":"Hugo系列(3) - 通过配置文件来定制个人站点","uri":"/posts/hugo-3.html/"},{"categories":["Hugo系列"],"content":"背景 使用Hexo搭建个人博客也有两年多时间了，当文章数量达到上百篇之后，开始发现Hexo生成文章的效率越来越慢，直到每次生成都需要至少五分钟的时间。我发现生成效率和文章涉及到的分类和标签有很大关系，由于文章数量多，每篇文章又都关联了若干个分类和标签，再加上我使用了压缩样式的插件，最终导致极其低下的生成效率。 在经过一段时间的考量后，决定将Hexo博客迁移到Hugo。Hugo是用go语言开发的，在用法上和Hexo类似，可以简单地把Hugo当成go语言版的Hexo，但是它拥有更快的生成效率。下面是官网的原话： The world’s fastest framework for building websites Hugo is one of the most popular open-source static site generators. With its amazing speed and flexibility, Hugo makes building websites fun again. ","date":"2020-09-06","objectID":"/posts/hugo-1.html/:1:0","tags":["Hugo","简单入门"],"title":"Hugo系列(1) - 简单入门与搭建","uri":"/posts/hugo-1.html/"},{"categories":["Hugo系列"],"content":"安装 和Hexo不同，Hugo安装非常简单，只需要去Hugo Release下载操作系统对应的二进制文件即可（hugo或者hugo.exe)。 对于Windows平台，一般是一个zip文件，解压后里面有个hugo.exe文件。将该文件所在目录添加到环境变量path里，即可在cmd里通过hugo version检测是否能正常运行hugo命令。 如下是我安装的hugo版本： \u003ehugo version Hugo Static Site Generator v0.74.2-48565DE6 windows/amd64 BuildDate: 2020-07-17T17:22:50Z 其他平台的安装方法可以参考官方文档：Install Hugo ","date":"2020-09-06","objectID":"/posts/hugo-1.html/:2:0","tags":["Hugo","简单入门"],"title":"Hugo系列(1) - 简单入门与搭建","uri":"/posts/hugo-1.html/"},{"categories":["Hugo系列"],"content":"创建站点 首先需要创建一个新的个人站点： hugo new site blog blog就是你的博客站点所在的目录，也是这个站点的根目录，创建站点后目录结构如下： archetypes/ content/ data/ layouts/ static/ themes/ config.toml 下面简单介绍下Hugo根目录下的各个文件目录的作用： archetypes存放创建文件时使用的模板，可以自定义front matter属性。 assets存放需要被Hugo Pipes处理的文件，且只有使用了.Permalink或者.RelPermalink的文件才能被发布到public目录。 注意，默认不会创建assets目录。 config是配置文件，可以有JSON、 YAML或者TOML三种格式，默认使用根目录下的config.toml、config.yaml或config.json中的某一个。可以通过--config来配置读取一个或多个配置文件，如：hugo --config a.toml,b.toml,c.toml。 注意，默认不会创建config目录。 content存放的各种md文件用于部署站点，该目录下可以自行创建若干个子目录来便于对文章进行分类，这些子目录被称为section。 data目录存放的是用于定义变量的模板文件，相当于Java里的常量类，这些文件有JSON、 YAML或者TOML三种格式，会在生成站点时被使用到。一般用不到该功能，具体用法可以参考：data templates layouts目录存放的模板文件用于渲染html页面，模板里可以定义不同页面的html代码。 static目录存放的是静态内容：图片、CSS、JavaScript等。 resources目录用于缓存某些文件来提高生成效率。 注意，默认不会创建resources目录。 ","date":"2020-09-06","objectID":"/posts/hugo-1.html/:3:0","tags":["Hugo","简单入门"],"title":"Hugo系列(1) - 简单入门与搭建","uri":"/posts/hugo-1.html/"},{"categories":["Hugo系列"],"content":"添加主题 为新站点添加一个主题，以我使用的LoveIt主题为例，先将主题代码放置到themes目录下： cd blog git init git submodule add https://github.com/dillonzq/LoveIt.git themes/LoveIt 接着修改config.toml： theme = \"LoveIt\" 这里的LoveIt对应themes目录下的主题的文件夹名字。 ","date":"2020-09-06","objectID":"/posts/hugo-1.html/:4:0","tags":["Hugo","简单入门"],"title":"Hugo系列(1) - 简单入门与搭建","uri":"/posts/hugo-1.html/"},{"categories":["Hugo系列"],"content":"新建文章 新建一篇文章： hugo new posts/first.md 该命令会在content/posts目录下生成first.md文件，打开进行编辑： --- title: \"First\" date: 2020-09-08T21:57:28+08:00 draft: true --- ## First First blog. 两行---里的属性是front matter，用来设置当前文章的属性配置。front matter的内容可以使用3种不同的格式来定义，两行---之间对应的是YAML格式，两行+++之间对应的是TOML格式，{和}之间对应的是JSON格式。 建议用YAML格式来定义，这样从Hexo迁移到Hugo的成本会更低。 下面是官方文档提供的3种不同格式的front matter的样例，有兴趣的可以了解下。 ","date":"2020-09-06","objectID":"/posts/hugo-1.html/:5:0","tags":["Hugo","简单入门"],"title":"Hugo系列(1) - 简单入门与搭建","uri":"/posts/hugo-1.html/"},{"categories":["Hugo系列"],"content":"TOML Example +++ title = \"spf13-vim 3.0 release and new website\" description = \"spf13-vim is a cross platform distribution of vim plugins and resources for Vim.\" tags = [ \".vimrc\", \"plugins\", \"spf13-vim\", \"vim\" ] date = \"2012-04-06\" categories = [ \"Development\", \"VIM\" ] slug = \"spf13-vim-3-0-release-and-new-website\" +++ Content of the file goes Here ","date":"2020-09-06","objectID":"/posts/hugo-1.html/:5:1","tags":["Hugo","简单入门"],"title":"Hugo系列(1) - 简单入门与搭建","uri":"/posts/hugo-1.html/"},{"categories":["Hugo系列"],"content":"YAML Example --- title: \"spf13-vim 3.0 release and new website\" description: \"spf13-vim is a cross platform distribution of vim plugins and resources for Vim.\" tags: [ \".vimrc\", \"plugins\", \"spf13-vim\", \"vim\" ] lastmod: 2015-12-23 date: \"2012-04-06\" categories: - \"Development\" - \"VIM\" slug: \"spf13-vim-3-0-release-and-new-website\" --- Content of the file goes Here ","date":"2020-09-06","objectID":"/posts/hugo-1.html/:5:2","tags":["Hugo","简单入门"],"title":"Hugo系列(1) - 简单入门与搭建","uri":"/posts/hugo-1.html/"},{"categories":["Hugo系列"],"content":"JSON Example { \"title\": \"spf13-vim 3.0 release and new website\", \"description\": \"spf13-vim is a cross platform distribution of vim plugins and resources for Vim.\", \"tags\": [ \".vimrc\", \"plugins\", \"spf13-vim\", \"vim\" ], \"date\": \"2012-04-06\", \"categories\": [ \"Development\", \"VIM\" ], \"slug\": \"spf13-vim-3-0-release-and-new-website\", } Content of the file goes Here ","date":"2020-09-06","objectID":"/posts/hugo-1.html/:5:3","tags":["Hugo","简单入门"],"title":"Hugo系列(1) - 简单入门与搭建","uri":"/posts/hugo-1.html/"},{"categories":["Hugo系列"],"content":"启动Hugo服务 输入命令： hugo server -D 在本地启动服务后可以在 http://localhost:1313/ 访问个人站点。该命令仅用于本地调试，支持热修改，也就是说在启动服务时修改文章会实时生效，但是该命令不会真正生成静态文件。 ","date":"2020-09-06","objectID":"/posts/hugo-1.html/:6:0","tags":["Hugo","简单入门"],"title":"Hugo系列(1) - 简单入门与搭建","uri":"/posts/hugo-1.html/"},{"categories":["Hugo系列"],"content":"生成静态页面 输入命令： hugo -D 默认会在站点根目录的public/目录下生成对应的静态页面，可以通过在命令行指定-d或者--destination参数来改变静态页面的存放路径，也可以通过在配置文件中设置publishDir来指定。 该命令生成的静态页面文件是用来部署到pages服务的，比如GitHub pages或者Coding pages等。 另外，hugo允许对生成的静态页面设置特殊的参数，比如在文章的front matter里设置参数：draft, publishdate和expirydate。如下： --- title: \"First\" date: 2020-09-08T21:57:28+08:00 draft: true publishdate: 2020-09-18T21:57:28+08:00 expirydate: 2020-09-28T21:57:28+08:00 --- draft: true表明该文章是草稿，如果在启用服务时不指定参数-D或--buildDrafts，或者在配置文件config.toml中配置buildDrafts = true，则会在生成文章时忽略草稿。如果不想指定该参数就生成文章，需要改为draft: false或者将其删去。 publishdate: 2020-09-18T21:57:28+08:00表示将来发布的时间，如果不指定参数-F或--buildFuture，或者在配置文件config.toml中配置buildFuture = true，则无法在规定的日期之前生成该文章。 expirydate: 2020-09-28T21:57:28+08:00表示过期时间，如果不指定参数-E或--buildExpired，或者在配置文件config.toml中配置buildExpired = true，则无法在规定的日期之后生成该文章。 ","date":"2020-09-06","objectID":"/posts/hugo-1.html/:7:0","tags":["Hugo","简单入门"],"title":"Hugo系列(1) - 简单入门与搭建","uri":"/posts/hugo-1.html/"},{"categories":["Hugo系列"],"content":"参考链接 Hugo Front Matter Hugo Quick Start Install Hugo Directory Structure Explained ","date":"2020-09-06","objectID":"/posts/hugo-1.html/:8:0","tags":["Hugo","简单入门"],"title":"Hugo系列(1) - 简单入门与搭建","uri":"/posts/hugo-1.html/"},{"categories":["Hexo"],"content":"问题与分析 某天忽然发现，一直运行得好好的Pages服务部署失败了，GitHub Pages报错如下： Your site is having problems building: The tag cq on line 3 in source/high/index.md is not a recognized Liquid tag. For more information, see https://help.github.com/articles/page-build-failed-unknown-tag-error/. 与此同时，Coding Pages同样也报错了： Starting jekyll build. \u003e jekyll build --safe Configuration file: /usr/src/app/_config.yml jekyll 3.6.2 | Error: The next theme could not be found. Jekyll build exit with code 1. Fail to build jekyll site. 首先我使用的是Hexo的next主题，而根据GitHub Pages的报错信息来看，是说在source/high/index.md里使用到了一个不认识的cq标签。 这个标签是next主题自带的，使用该标签快一年了，还是第一次遇到报这个错。接着根据Coding Pages的报错来看，则是说/usr/src/app/_config.yml里找不到jekyll的主题。 这就很奇怪了，我使用的明明是hexo，怎么忽然就变成jekyll了？一阵瞎折腾过后，一直部署失败。我忽然想起来一个事情，我之前曾经拿本地的博客仓库的git配置练过手，难道和这个有关？ 我开始查找本地博客仓库的git配置，我是使用hexo-deployer-git这个插件来将本地生成的静态博客发送到远程仓库的。 当我在本地在执行hexo g后，会在博客根目录下生成一个public文件夹，这个文件夹里的文件组合起来就是一个完整的静态博客。 接着如果执行hexo d，就会把这个public文件夹的东西完完整整拷贝到.deploy_git文件夹里，然后会把该文件夹里的所有文件全部推送push到远程库。之后会触发Pages服务的钩子去build项目，然后部署到网站上。 ","date":"2019-04-26","objectID":"/posts/a5a02c64.html/:1:0","tags":["Hexo"],"title":"Hexo - 记录一次Pages服务部署失败的原因","uri":"/posts/a5a02c64.html/"},{"categories":["Hexo"],"content":"发现线索 我打开public文件夹，发现生成出来的文件很正常，接着打开.deploy_git文件夹，发现也很正常，接着查看远程库里的文件，终于发现了问题。 在远程库的分支里，根本就没有hexo相关的文件，至此算是找到原因了。 很显然，我在执行hexo d时出了问题，没能正常将文件push到远程库，于是部署就失败了。之前该命令是没问题的，可之前我曾经动过手脚，修改过博客项目里的git配置，手动修改了.git里的文件，莫非这就是问题的根源？ ","date":"2019-04-26","objectID":"/posts/a5a02c64.html/:2:0","tags":["Hexo"],"title":"Hexo - 记录一次Pages服务部署失败的原因","uri":"/posts/a5a02c64.html/"},{"categories":["Hexo"],"content":"解决方法 基于以上的猜想，我直接删掉了本地博客项目的.deploy_git文件夹，重新执行命令： hexo cl hexo g -d 等待片刻后，我终于看到远程部署成功，我的个人站点再次运转成功！ 皇天不负有心人啊！原因终于明了，是.deploy_git文件夹出现问题，删掉该文件夹，重新运行hexo d即可。 记录下这次的遭遇，遇到问题应该静下心来，仔细分析，才不容易瞎折腾~ ","date":"2019-04-26","objectID":"/posts/a5a02c64.html/:3:0","tags":["Hexo"],"title":"Hexo - 记录一次Pages服务部署失败的原因","uri":"/posts/a5a02c64.html/"},{"categories":["Hexo"],"content":"问题 一般我们会将Hexo博客搭建到Github上，如果在Github上为其配置一个自定义的域名时，会自动在项目仓库根目录下新添加一个CNAME文件。但是这里有个问题，如果将Hexo博客重新部署一遍后，Github仓库里的这个CNAME文件就会消失掉，又需要重新配置一遍。 ","date":"2018-12-19","objectID":"/posts/39e3ca60.html/:1:0","tags":["Hexo","CNAME"],"title":"Hexo - CNAME文件在每次部署后就没了","uri":"/posts/39e3ca60.html/"},{"categories":["Hexo"],"content":"解决方法 其实这里有个技巧，我们可以将需要上传部署到Github的文件都放在source文件夹里，例如CNAME文件、favicon.ico、或者其他的图片等等，这样在执行hexo d这个命令之后，这些文件就不会被删除了。 Hexo在执行命令时是不会删除掉source目录下的文件的，我们可以在该目录下随意增加其他文件或者文件夹，建议在该目录下添加子文件夹，然后在子文件夹里添加文件，这样便于文件分档归类。 ","date":"2018-12-19","objectID":"/posts/39e3ca60.html/:2:0","tags":["Hexo","CNAME"],"title":"Hexo - CNAME文件在每次部署后就没了","uri":"/posts/39e3ca60.html/"},{"categories":["Hexo"],"content":"问题与分析 今天发现在使用hexo g时报错如下： FATAL Something's wrong. Maybe you can find the solution here: http://hexo.io/docs/troubleshooting.html Template render error: unexpected token: }} 一时间很诧异，因为前几天还可以正常生成静态文件，今天忽然就挂了。看看报错的信息，说是模板渲染失败，因为出现了预期外的标志。因为我刚刚写了新的文章，就出现了这个错误，可以想象到，应该是文章中出现了特殊字符导致hexo命令执行失败了。 百度了下，确实如此。因为在Hexo中，有些特殊字符如果不进行转义的话，在渲染模板时就会报错。 ","date":"2018-10-23","objectID":"/posts/2a5ffb7e.html/:1:0","tags":["Hexo"],"title":"Hexo - Template render error unexpected token","uri":"/posts/2a5ffb7e.html/"},{"categories":["Hexo"],"content":"解决方法 如果遇到类似的报错，解决方法很简单，就是对这些特殊字符进行转义，需要使用转义标签来将这些特殊字符包括起来，如下： {% raw %} 特殊字符 {% endraw %} 比如我的报错是因为使用{% raw %}}}{% endraw %}，那么就需要对这对大括号进行转义： {% raw %} {{ something... }} {% endraw %} 如果是在引用块里，可以随便使用特殊字符；如果是行内引用块，就需要进行转义了。 ","date":"2018-10-23","objectID":"/posts/2a5ffb7e.html/:2:0","tags":["Hexo"],"title":"Hexo - Template render error unexpected token","uri":"/posts/2a5ffb7e.html/"},{"categories":["Hexo"],"content":"参考链接 Hexo的一个小BUG(Template render error) Hexo 异常 - Template render error unexpected token ","date":"2018-10-23","objectID":"/posts/2a5ffb7e.html/:3:0","tags":["Hexo"],"title":"Hexo - Template render error unexpected token","uri":"/posts/2a5ffb7e.html/"},{"categories":null,"content":"\rHigh!!! 前方高能♂ 1.gif \" 1.gif 2.gif \" 2.gif ","date":"2018-06-18","objectID":"/high/:0:0","tags":null,"title":"Everybody~ High起来!","uri":"/high/"},{"categories":["Hexo"],"content":"今天安装了hexo-generator-baidu-sitemap后，运行hexo g报错如下： error.jpg \" error.jpg 到了作者的GitHub上发现也有人提了相关的issue，不过都过了相当一段时间了依然没有解决，最后还是自己动手丰衣足食，解决方法很简单，因为Hexo3.X.X版本改变了代码导致toArray()无法使用，我们直接将该方法去掉就行了。 打开 node_modules\\hexo-generator-baidu-sitemap\\baidusitemap.ejs，将这里边的 post.tags.toArray() 和 post.categories.toArray() 改成 post.tags 和 post.categories，简单的说就是把这里的 toArray() 去掉，新版本的Hexo的tags和categories可以直接遍历。 code.jpg \" code.jpg 接下来重新运行 hexo g 和 hexo s，本地调试成功~ ","date":"2018-06-12","objectID":"/posts/49fbb32a.html/:0:0","tags":["Hexo"],"title":"Hexo - 3.X.X版本无法生成baidusitemap","uri":"/posts/49fbb32a.html/"},{"categories":["Hexo"],"content":"Hexo的永久链接的默认格式是 :year/:month/:day/:title/，比如访问站点下某一篇文章时，其路径是 2018/04/12/xxxx/，如果我们的文章标题是中文的，那么该路径就会出现中文字符。在路径中出现了中文字符很容易引发各种问题，而且也不利于seo，因为路径包含了年月日三个层级，层级太深不利于百度蜘蛛抓取。 解决办法就是利用其它的插件来生成唯一的路径，这样就算我们的文件标题随意修改，而不会导致原本的链接失效而造成站点下存在大量的死链。 ","date":"2018-05-13","objectID":"/posts/ff4321d8.html/:0:0","tags":["Hexo"],"title":"Hexo - 修改永久链接的默认格式","uri":"/posts/ff4321d8.html/"},{"categories":["Hexo"],"content":"安装插件 在站点根目录使用 git bash 执行命令： npm install hexo-abbrlink --save ","date":"2018-05-13","objectID":"/posts/ff4321d8.html/:1:0","tags":["Hexo"],"title":"Hexo - 修改永久链接的默认格式","uri":"/posts/ff4321d8.html/"},{"categories":["Hexo"],"content":"修改站点配置文件 打开根目录下的 _config.yml 文件，修改如下配置： # permalink: :year/:month/:day/:title/ # permalink_defaults: permalink: posts/:abbrlink.html abbrlink: alg: crc32 # 算法：crc16(default) and crc32 rep: hex # 进制：dec(default) and hex 这里将页面都添加了 .html 的后缀，用来伪装成静态页面(虽说Hexo的页面本身就是静态页面)，这样可以直接从路径就知道这是个静态页面，方便seo。 接下来重新部署三连，可以看到我们的文章路径变成了 /posts/xxxxx.html，接下来就算我们将文字标题命名为中文也没问题了。 ","date":"2018-05-13","objectID":"/posts/ff4321d8.html/:2:0","tags":["Hexo"],"title":"Hexo - 修改永久链接的默认格式","uri":"/posts/ff4321d8.html/"},{"categories":["Hexo"],"content":"修改默认的post和draft的模板 通过hexo n post XXX或者hexo n draft XXX所生成的文章或草稿是根据默认的模板来生成的，我们可以自己来定制想要的模板。 在站点根目录下的 scaffolds 文件夹下，存放着 draft.md， page.md 和 post.md这三个文件夹，一般我们只需要修改draft和post这两个模板就行了。 我们可以在模板的文件头里添加自己想要的格式，如下： --- title: {{ title }} date: {{ date }} tags: categories: --- 这样使用命令生成的draft或post都会默认带有上边的文件头了。 ","date":"2018-05-10","objectID":"/posts/1369.html/:1:0","tags":["Hexo"],"title":"Hexo - 修改默认的post和draft的模板","uri":"/posts/1369.html/"},{"categories":["Hexo"],"content":"添加新的模板来生成定制的post 其实我们还可以在 scaffolds 目录下添加新的模板文件，比如 Hexo.md，其模板内容如下： --- title: {{ title }} date: {{ date }} tags: - Hexo categories: - Hexo --- 然后通过命令： hexo n hexo XXX 注意，这里的第二个 hexo 指的是我们刚刚新添加的模板文件 hexo.md 的文件名；这里的文件名和命令都是大小写不敏感的。 执行完命令会在 source/_posts 目录下生成与 hexo.md 模板相对应的文章。 ","date":"2018-05-10","objectID":"/posts/1369.html/:2:0","tags":["Hexo"],"title":"Hexo - 修改默认的post和draft的模板","uri":"/posts/1369.html/"},{"categories":["Hexo"],"content":"网上有不少办法，有的是启用配置文件中的属性，有的则是安装插件，这里只介绍最简单的一种方法。 在 source/ 目录下新建一个文件夹，比如 images；在该文件夹下存放各种图片资源，比如 test.jpg； 新建一篇文章，在文章中使用markdown的插入图片语法： ![test](/images/test.jpg) 这里使用的是绝对路径，如果使用相对路径比如images/test.jpg可能会无法访问到该图片资源。建议在博客或者配置中都使用绝对路径。 ","date":"2018-05-09","objectID":"/posts/12046.html/:0:0","tags":["Hexo"],"title":"Hexo - 如何在文章中插入图片","uri":"/posts/12046.html/"},{"categories":["Hexo搭建博客教程"],"content":" 本章讲的是如何将本地的个人项目远程部署到 GitHub Pages，涉及到GitHub的项目仓库、Git的使用，以及Hexo的远程部署等。 ","date":"2018-04-24","objectID":"/posts/1657.html/:0:0","tags":["Hexo","Pages服务"],"title":"Hexo搭建博客教程(3) - 远程部署到GitHub Pages","uri":"/posts/1657.html/"},{"categories":["Hexo搭建博客教程"],"content":"一、安装 hexo-deployer-git 插件 想要将Hexo项目部署到 GitHub上，需要先安装一个插件。在Hexo项目的根目录打开命令窗口，输入： npm install hexo-deployer-git --save\r ","date":"2018-04-24","objectID":"/posts/1657.html/:1:0","tags":["Hexo","Pages服务"],"title":"Hexo搭建博客教程(3) - 远程部署到GitHub Pages","uri":"/posts/1657.html/"},{"categories":["Hexo搭建博客教程"],"content":"二、GitHub上创建一个仓库 仓库的名字可以随便起，不过这个仓库是作为我们的博客仓库的，所以尽量将名字以 {username}.github.io 的形式来起。 比如，我的GitHub用户名是lewky，我就会把这个仓库命名为lewky.github.io。（为什么要这样起名，后面会说明） ","date":"2018-04-24","objectID":"/posts/1657.html/:2:0","tags":["Hexo","Pages服务"],"title":"Hexo搭建博客教程(3) - 远程部署到GitHub Pages","uri":"/posts/1657.html/"},{"categories":["Hexo搭建博客教程"],"content":"三、修改本地的项目配置文件 在 _config.yml 找到如下： # Deployment ## Docs: https://hexo.io/docs/deployment.html deploy: type: 把刚刚我们新建的GitHub仓库链接配置进来： # Deployment ## Docs: https://hexo.io/docs/deployment.html deploy: type: git repo: git@github.com:/{user}/{repository}.git branch: master message: 请注意，这里的仓库地址如果写成：https://github.com/{user}/{repository}.git可能会在后边的部署时无法成功，需要将https://github.com改成如下格式： git@github.com: 另外这里的branch和message可以不填，branch会默认是master分支，message会默认用下边的格式模板： Site updated: {{ now('YYYY-MM-DD HH:mm:ss') }} ","date":"2018-04-24","objectID":"/posts/1657.html/:3:0","tags":["Hexo","Pages服务"],"title":"Hexo搭建博客教程(3) - 远程部署到GitHub Pages","uri":"/posts/1657.html/"},{"categories":["Hexo搭建博客教程"],"content":"四、SSH key的创建与配置 最关键的一步来了，我们需要生成一对密钥对，然后将公钥配置到GitHub账号上。 ","date":"2018-04-24","objectID":"/posts/1657.html/:4:0","tags":["Hexo","Pages服务"],"title":"Hexo搭建博客教程(3) - 远程部署到GitHub Pages","uri":"/posts/1657.html/"},{"categories":["Hexo搭建博客教程"],"content":"4.1 生成RSA密钥对 首先使用 Git Bash 输入： cd ~/.ssh ~ 指的是当前用户的根目录，即 C:\\Users\\{user}\\；而 .ssh 目录下一般存放着公开的SSH key文件： id_dsa.pub id_ecdsa.pub id_ed25519.pub id_rsa.pub 此外还有个 known_hosts 文件，SSH会把我们每个访问过的计算机的公钥(public key)都记录在里面。 如果在使用了 cd ~/.ssh 后能找到路径，那就把该目录下的 id_rsa.pub 文件里的内容复制到剪切板。如果找不到路径，就执行命令： ssh-keygen -t rsa -b 4096 -C \"your_email@example.com\" 该命令会生成新的SSH key，这里的参数含义： -t: type，生成的密钥类型 -b: bits，指定密钥长度，对于RSA密钥，最小要求768位，默认是2048位。DSA密钥必须恰好是1024位，一般越长越安全。 -C: comment，提供一个新注释 接着会看到如下提示： Enter file in which to save the key (/c/Users/123/.ssh/id_rsa): 这里按下回车，表示将SSH key保存到默认地址，即：C:\\Users\\{user}\\ 如果本身已经存在一个RSA私钥了，会提示你： /c/Users/123/.ssh/id_rsa already exists. Overwrite (y/n)? 这里输入 y 可以重新生成RSA密钥对；然后就会看到如下提示： Enter passphrase (empty for no passphrase): 这里按下回车，表示不设置密码；接着会再提示你输入重复密码，依然是按下回车。 Enter same passphrase again: 这时候我们的SSH key就生成好了，去 ~/.ssh 目录下将里边的 id_rsa.pub 文件里的内容复制到剪切板。 ","date":"2018-04-24","objectID":"/posts/1657.html/:4:1","tags":["Hexo","Pages服务"],"title":"Hexo搭建博客教程(3) - 远程部署到GitHub Pages","uri":"/posts/1657.html/"},{"categories":["Hexo搭建博客教程"],"content":"4.2 在 GitHub 上配置SSH key 接着登陆我们的 GitHub 账号： 进入 Settings 页面 选择 SSH and GPG keys 点击 New SSH key 填写 Title（用来给公钥起一个名字，以便和其他的公钥区分开来） 然后在 Key 里将我们刚刚复制的公钥复制进去 最后点击 Add SSH key，这时候 GitHub 会要你输入账号密码进行确认。 ","date":"2018-04-24","objectID":"/posts/1657.html/:4:2","tags":["Hexo","Pages服务"],"title":"Hexo搭建博客教程(3) - 远程部署到GitHub Pages","uri":"/posts/1657.html/"},{"categories":["Hexo搭建博客教程"],"content":"4.3 验证ssh连接 使用 Git Bash 输入： ssh -T git@github.com 接着会看到： The authenticity of host 'github.com (192.30.253.112)' can't be established. RSA key fingerprint is SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8. Are you sure you want to continue connecting (yes/no)? 输入 yes，会看到： Warning: Permanently added 'github.com,192.30.253.112' (RSA) to the list of known hosts. Hi lewky! You've successfully authenticated, but GitHub does not provide shell access. 这时候 github.com的公钥被保存到known_hosts文件里，如果我们再执行一次ssh -T git@github.com，就不需要输入yes了，会直接看到： Hi lewky! You've successfully authenticated, but GitHub does not provide shell access. ","date":"2018-04-24","objectID":"/posts/1657.html/:4:3","tags":["Hexo","Pages服务"],"title":"Hexo搭建博客教程(3) - 远程部署到GitHub Pages","uri":"/posts/1657.html/"},{"categories":["Hexo搭建博客教程"],"content":"4.4 部署到 GitHub Pages 输入命令： hexo d 或者 hexo g -d 后一条命令表示生成静态页面并部署到远处仓库，第一次部署会久一点，部署成功后会看到： * [new branch] HEAD -\u003e master INFO Deploy done: git 接着登陆 GitHub 并进入我们的项目仓库，可以看到已经多出了很多文件，且其 message 都是默认的格式： Site updated: {{ now('YYYY-MM-DD HH:mm:ss') }} 接下来点击 Settings 进入该仓库的设置页面，找到 Github Pages 这一项，选择以 Master 分支作为 source，然后保存；接下来这个仓库就会被部署到 https://{username}.github.io/{仓库名}。 如果你希望直接通过 https://{username}.github.io/ 来访问你的博客，可以将仓库名改为 {username}.github.io；这样就不需要在url后边添加上仓库名来访问了。 接下来，开始享受你的个人博客吧 :) ","date":"2018-04-24","objectID":"/posts/1657.html/:4:4","tags":["Hexo","Pages服务"],"title":"Hexo搭建博客教程(3) - 远程部署到GitHub Pages","uri":"/posts/1657.html/"},{"categories":["Hexo搭建博客教程"],"content":" 本章主要讲博客的个性化，譬如站点的基本配置（语言、头像、站点图标等）、安装新的Hexo主题（NexT主题）以及主题的配置。 ","date":"2018-04-24","objectID":"/posts/38619.html/:0:0","tags":["Hexo","个性化配置"],"title":"Hexo搭建博客教程(2) - 博客的简单个性化配置","uri":"/posts/38619.html/"},{"categories":["Hexo搭建博客教程"],"content":"一、修改站点配置 打开站点配置文件 ，找到： # Site title: Hexo subtitle: description: keywords: author: John Doe language: timezone: 根据自己的需要去修改上边的配置，这些配置的注释如下： # Site # 站点标题 title: Hexo # 站点副标题 subtitle: # 站点描述 description: # 站点关键词 keywords: # 站点主人 author: John Doe # 站点语言 language: # 站点时区 timezone: ","date":"2018-04-24","objectID":"/posts/38619.html/:1:0","tags":["Hexo","个性化配置"],"title":"Hexo搭建博客教程(2) - 博客的简单个性化配置","uri":"/posts/38619.html/"},{"categories":["Hexo搭建博客教程"],"content":"1.1 language 目前 NexT 支持的语言如下： 语言 language English en 简体中文 zh-Hans Français fr-FR Português pt或者pt-BR 繁體中文 zh-hk或者zh-tw Русский язык ru Deutsch de 日本語 ja Indonesian id Korean ko ","date":"2018-04-24","objectID":"/posts/38619.html/:1:1","tags":["Hexo","个性化配置"],"title":"Hexo搭建博客教程(2) - 博客的简单个性化配置","uri":"/posts/38619.html/"},{"categories":["Hexo搭建博客教程"],"content":"1.2 timezone Hexo 默认使用电脑的时区，也可以自己配置，比如： UTC+8\r ","date":"2018-04-24","objectID":"/posts/38619.html/:1:2","tags":["Hexo","个性化配置"],"title":"Hexo搭建博客教程(2) - 博客的简单个性化配置","uri":"/posts/38619.html/"},{"categories":["Hexo搭建博客教程"],"content":"二、安装新主题 Hexo有很多大佬开发的主题，很多人使用的是NexT主题，该主题也确实挺简洁好看的，新版本的NexT主题还可以选择四个主题。 那么怎么安装新的Hexo主题呢？ 在我们的Hexo项目路径下，可以看到有个 themes 文件夹，这个文件夹就是用于存放主题文件的。 ","date":"2018-04-24","objectID":"/posts/38619.html/:2:0","tags":["Hexo","个性化配置"],"title":"Hexo搭建博客教程(2) - 博客的简单个性化配置","uri":"/posts/38619.html/"},{"categories":["Hexo搭建博客教程"],"content":"2.1 下载 NexT 主题 首先在Hexo项目的路径下打开命令窗口，如果你没有配置好Git的环境变量，请使用Git Bash。 git clone https://github.com/iissnan/hexo-theme-NexT themes/NexT 注意，当前路径是你的Hexo项目根目录，使用上边的命令才能正确地将 NexT 主题clone到themes文件夹下的NexT文件夹里。 接下来你会看到 themes 下多了个 NexT 文件夹，点进去你会看到个.git文件夹，将该文件夹删掉，否则到时候你无法将整个完整的Hexo项目push到GitHub上。 ","date":"2018-04-24","objectID":"/posts/38619.html/:2:1","tags":["Hexo","个性化配置"],"title":"Hexo搭建博客教程(2) - 博客的简单个性化配置","uri":"/posts/38619.html/"},{"categories":["Hexo搭建博客教程"],"content":"2.2 启用 NexT 主题 在Hexo项目中，有两个重要的配置文件 _config.yml；这两个配置文件一个在项目根目录下，一个在主题目录下。 前者是站点配置文件，后者是主题配置文件，顾名思义，一个是Hexo项目的配置选项，一个是主题文件的配置选项。 打开站点配置文件，用Windows自带的笔记本是无法打开该文件的，请使用其他的编辑器来打开，常见的编辑器有Notepad++，UltraEdit，EditPlus等。 在站点配置文件中，找到： # Extensions ## Plugins: https://hexo.io/plugins/ ## Themes: https://hexo.io/themes/ theme: landscape 默认的博客主题就是这个，我们将其修改为NexT；这里的主题是指在 themes 文件夹下的对应主题的文件夹名字。 **注意，在配置文件中所有的属性的值，都必须和前边的 : 之间留一个空格。**比如下边的写法就是错误的，不加上空格的话会出错。 theme:landscape ","date":"2018-04-24","objectID":"/posts/38619.html/:2:2","tags":["Hexo","个性化配置"],"title":"Hexo搭建博客教程(2) - 博客的简单个性化配置","uri":"/posts/38619.html/"},{"categories":["Hexo搭建博客教程"],"content":"2.3 选择对应主题的外观 Scheme 打开主题配置文件，找到下边的选项： # --------------------------------------------------------------- # Scheme Settings # --------------------------------------------------------------- # Schemes scheme: Muse #scheme: Mist #scheme: Pisces #scheme: Gemini 默认会使用Muse作为NexT主题的外观，通过将某个scheme前边的#去掉来启动某个外观，如下： # --------------------------------------------------------------- # Scheme Settings # --------------------------------------------------------------- # Schemes #scheme: Muse #scheme: Mist #scheme: Pisces scheme: Gemini ","date":"2018-04-24","objectID":"/posts/38619.html/:2:3","tags":["Hexo","个性化配置"],"title":"Hexo搭建博客教程(2) - 博客的简单个性化配置","uri":"/posts/38619.html/"},{"categories":["Hexo搭建博客教程"],"content":"2.4 验证新主题 依然是老操作——启动调试模式服务器： hexo s --debug 启动成功后，使用浏览器访问http://localhost:4000/，看看博客能否访问成功。 ","date":"2018-04-24","objectID":"/posts/38619.html/:2:4","tags":["Hexo","个性化配置"],"title":"Hexo搭建博客教程(2) - 博客的简单个性化配置","uri":"/posts/38619.html/"},{"categories":["Hexo搭建博客教程"],"content":"三、修改 NexT 主题配置 主题配置文件 _config.yml 位于 themes\\NexT 之下。 ","date":"2018-04-24","objectID":"/posts/38619.html/:3:0","tags":["Hexo","个性化配置"],"title":"Hexo搭建博客教程(2) - 博客的简单个性化配置","uri":"/posts/38619.html/"},{"categories":["Hexo搭建博客教程"],"content":"3.1 头像设置 打开主题配置文件，找到如下： # 侧边栏头像 # Sidebar Avatar # in theme directory(source/images): /images/avatar.gif # in site directory(source/uploads): /uploads/avatar.gif # 头像的路径可以放在主题对应文件夹的source里，也可以放在站点根目录的source里，建议放在站点路径上 #avatar: /images/avatar.gif 将avatar前边的#去掉，接着配置图片的路径即可。 ","date":"2018-04-24","objectID":"/posts/38619.html/:3:1","tags":["Hexo","个性化配置"],"title":"Hexo搭建博客教程(2) - 博客的简单个性化配置","uri":"/posts/38619.html/"},{"categories":["Hexo搭建博客教程"],"content":"3.2 网站图标 打开主题配置文件，找到如下： # 将你的网站图标放到`{站点根目录}/source/` (推荐）或者`hexo-site/themes/NexT/source/images/`目录下 # 默认的NexT主题的网站图标放在`{站点根目录}/themes/NexT/source/images/`目录下 # 如果你想将自己的网站图标放到`{站点根目录}/source/`根目录下，必须将`/images`从路径中去掉 # 如果你将网站图标放到了`{站点根目录}/source/images`路径下，需要令网站图标的名字和`{站点根目录}/themes/NexT/source/images/`路径下的网站图标不同，否则网站图标会使用后者的同名图标 favicon: small: /images/favicon-16x16-NexT.png medium: /images/favicon-32x32-NexT.png apple_touch_icon: /images/apple-touch-icon-NexT.png safari_pinned_tab: /images/logo.svg #android_manifest: /images/manifest.json #ms_browserconfig: /images/browserconfig.xml 这里需要注意的是，网站图标一般是.ico或者.gif的类型，而且图标的大小一般只有几k而已，可以使用下边的网站制作个人的网站图标，建议先将原本的图标弄成正方形的。 在线制作ico图标 ","date":"2018-04-24","objectID":"/posts/38619.html/:3:2","tags":["Hexo","个性化配置"],"title":"Hexo搭建博客教程(2) - 博客的简单个性化配置","uri":"/posts/38619.html/"},{"categories":["Hexo搭建博客教程"],"content":"3.3 菜单设置 打开主题配置文件，找到如下： # 如果该站点是运行在子目录之下（比如：domain.tld/blog；这里的blog就是指我们的博客，前边的是上一级的域名），需要将路径前的斜杠去掉（/archives -\u003e archives；即是将原本的绝对路径改成了相对路径）。 # 用法：`Key：/link/ || 菜单图标` # Key就是菜单名，如果对该菜单名进行了国际化，即将其翻译放到对应的languages文件夹中，将会根据你设置的语言进行加载对应的菜单名翻译；如果没有设置翻译，则会使用这里的Key作为菜单名。这里的Key是大小写敏感的。 # 在`||`分隔符之前的值是该菜单对应的路径 # 在`||`分隔符之后的值是FontAwesome的图标（不懂的请百度什么是FontAwesome以及其用法），如果不指定图标，将会自动使用question这个图标。 menu: home: / || home #about: /about/ || user #tags: /tags/ || tags #categories: /categories/ || th archives: /archives/ || archive #schedule: /schedule/ || calendar #sitemap: /sitemap.xml || sitemap #commonweal: /404/ || heartbeat 使用方法很简单，依然是将需要展示的菜单的前边的#去掉就行，更加具体的操作信息我已经在上边的注释中给出了。 ","date":"2018-04-24","objectID":"/posts/38619.html/:3:3","tags":["Hexo","个性化配置"],"title":"Hexo搭建博客教程(2) - 博客的简单个性化配置","uri":"/posts/38619.html/"},{"categories":["Hexo搭建博客教程"],"content":"3.4 标签分类 首先我们需要新建页面，在站点根目录打开命令窗口，分别输入命令： hexo n page \"categories\" hexo n page \"tags\" hexo n page \"about\" 接着你会发现在根目录的 source 目录下多出了上边的三个文件夹，里面各自有一个 index.md 文件。如果之前我们将menu里的categories，tags，about三个菜单解开了封印，那么在创建好这三个页面后就可以成功访问到，否则会报404请求错误。 ","date":"2018-04-24","objectID":"/posts/38619.html/:3:4","tags":["Hexo","个性化配置"],"title":"Hexo搭建博客教程(2) - 博客的简单个性化配置","uri":"/posts/38619.html/"},{"categories":["Hexo搭建博客教程"],"content":"3.5 社交链接 # 如果不指定图标，会默认使用globe图标 #social: #GitHub: https://github.com/yourname || github #E-Mail: mailto:yourname@gmail.com || envelope #Google: https://plus.google.com/yourname || google #Twitter: https://twitter.com/yourname || twitter #FB Page: https://www.facebook.com/yourname || facebook #VK Group: https://vk.com/yourname || vk #StackOverflow: https://stackoverflow.com/yourname || stack-overflow #YouTube: https://youtube.com/yourname || youtube #Instagram: https://instagram.com/yourname || instagram #Skype: skype:yourname?call|chat || skype 老规矩，去掉#注释就可以启动。 ","date":"2018-04-24","objectID":"/posts/38619.html/:3:5","tags":["Hexo","个性化配置"],"title":"Hexo搭建博客教程(2) - 博客的简单个性化配置","uri":"/posts/38619.html/"},{"categories":["Hexo搭建博客教程"],"content":" 前言 搭建个人博客一般有两种选择，一个是使用WordPress，但是需要将博客搭建在服务器上，不过搭建好后写文章方便，适合没有程序基础的人使用。另一个是使用Hexo，相对简洁高效，不需要服务器，既可以部署在本地，也可以将博客部署到GitHub Pages上，支持Markdown语法，缺点是需要有Git基础，写文章比WordPress麻烦点。 初次使用Hexo来搭建个人博客，确实比较手忙脚乱，这里记录一下流程，希望对大家能有所帮助。 （注：本文是只针对Windows平台的搭建教程） 有兴趣的可以戳下这里看看我的个人博客。 How to play 本教程一共分为3章： 第一章是安装环境和本地搭建 第二章是博客的个性化配置 第三章是将博客部署到 GitHub Pages 请根据自身需要选择章节，以节省时间。 ","date":"2018-04-24","objectID":"/posts/22143.html/:0:0","tags":["Hexo","简单入门"],"title":"Hexo搭建博客教程(1) - 安装环境与本地搭建","uri":"/posts/22143.html/"},{"categories":["Hexo搭建博客教程"],"content":"一、安装环境 安装Node.js 安装Git 安装Hexo ","date":"2018-04-24","objectID":"/posts/22143.html/:1:0","tags":["Hexo","简单入门"],"title":"Hexo搭建博客教程(1) - 安装环境与本地搭建","uri":"/posts/22143.html/"},{"categories":["Hexo搭建博客教程"],"content":"1.1 安装Node.js Hexo是一个基于Node.js的快速、简洁且高效的静态站点生成框架，想要安装Hexo，需要先安装Node.js，官网的安装包有两种，一种是安装程序.msi文件，一种是.zip压缩包，这里选择.msi文件，安装后会自动配置好环境变量。 下载链接 ","date":"2018-04-24","objectID":"/posts/22143.html/:1:1","tags":["Hexo","简单入门"],"title":"Hexo搭建博客教程(1) - 安装环境与本地搭建","uri":"/posts/22143.html/"},{"categories":["Hexo搭建博客教程"],"content":"1.2 安装Git Git就不多说了，作为开发者或多或少都会接触过吧，直接前往官网下载安装包即可。操作教程网上也是一堆，这里就不赘述了。 下载链接 如果Git和Node.js的环境变量都配置好了，可以通过在cmd中确认安装结果。 git --version node -v ","date":"2018-04-24","objectID":"/posts/22143.html/:1:2","tags":["Hexo","简单入门"],"title":"Hexo搭建博客教程(1) - 安装环境与本地搭建","uri":"/posts/22143.html/"},{"categories":["Hexo搭建博客教程"],"content":"1.3 安装Hexo 安装好Node.js，就可以使用npm来安装Hexo npm install -g hexo-cli 安装完毕后，可以通过hexo version来确认是否安装成功。 ","date":"2018-04-24","objectID":"/posts/22143.html/:1:3","tags":["Hexo","简单入门"],"title":"Hexo搭建博客教程(1) - 安装环境与本地搭建","uri":"/posts/22143.html/"},{"categories":["Hexo搭建博客教程"],"content":"二、开始搭建个人博客 千里之行，始于足下，在安装好所有的环境之后，我们终于可以开始搭建博客的第一步了。 ","date":"2018-04-24","objectID":"/posts/22143.html/:2:0","tags":["Hexo","简单入门"],"title":"Hexo搭建博客教程(1) - 安装环境与本地搭建","uri":"/posts/22143.html/"},{"categories":["Hexo搭建博客教程"],"content":"2.1 初始化Hexo项目 首先是选择一个文件夹，用来给我们我们的个人博客的存放各种文件。接着进入该文件夹的路径，打开cmd命令窗口，这里有两种打开方式： 按住Shift，同时点击鼠标右键，选择在此处打开命令窗口。 在上方的地址栏里输入cmd，接着回车即可快速打开命令窗口。 当然，你也可以直接Win+R然后输入cmd来打开命令窗口，不过需要再通过cd命令将路径切换到你指定的文件夹。 接着输入指令来初始化你的博客 hexo init 初始化成功后，你会看到 Start blogging with Hexo! ","date":"2018-04-24","objectID":"/posts/22143.html/:2:1","tags":["Hexo","简单入门"],"title":"Hexo搭建博客教程(1) - 安装环境与本地搭建","uri":"/posts/22143.html/"},{"categories":["Hexo搭建博客教程"],"content":"2.2 生成静态页面文件 接下来，执行命令 hexo g 该命令用来生成静态页面文件到public目录，Hexo会将 source 文件夹中除 posts 文件夹之外，以下划线_开头命名的文件或文件夹、以及隐藏的文件将会被忽略。Markdown 和 HTML 文件会被解析并放到 public 文件夹，而其他文件夹会被拷贝过去。 最后，我们只要启动Hexo服务器就行了。 ","date":"2018-04-24","objectID":"/posts/22143.html/:2:2","tags":["Hexo","简单入门"],"title":"Hexo搭建博客教程(1) - 安装环境与本地搭建","uri":"/posts/22143.html/"},{"categories":["Hexo搭建博客教程"],"content":"2.3 本地启动Hexo服务器 hexo s --debug Hexo启动服务器的速度非常快，很快你就可以看到 Hexo is running at http://localhost:4000/. Press Ctrl+C to stop. 恭喜你，你的个人博客已经搭建成功了，接下来只要在浏览器输入http://localhost:4000/就可以在本地访问你的博客了。 这里使用hexo s也可以启动服务器，只不过加上--debug 参数，如果运行中出错可以看到错误信息。 ","date":"2018-04-24","objectID":"/posts/22143.html/:2:3","tags":["Hexo","简单入门"],"title":"Hexo搭建博客教程(1) - 安装环境与本地搭建","uri":"/posts/22143.html/"},{"categories":["Hexo搭建博客教程"],"content":"2.4 关闭Hexo服务器 要想关闭服务器，只需要在命令窗口按下Ctrl+C就可以了，这个组合键不仅仅用于关闭服务器，事实上你在cmd窗口中任何执行中的命令都可以用这个组合键来结束命令，只要连按两次该组合键就可以连输入Y或者N都不用。 ","date":"2018-04-24","objectID":"/posts/22143.html/:2:4","tags":["Hexo","简单入门"],"title":"Hexo搭建博客教程(1) - 安装环境与本地搭建","uri":"/posts/22143.html/"},{"categories":["Hexo搭建博客教程"],"content":"三、常用的命令 hexo new \"postName\" #新建文章 hexo new page \"pageName\" # 新建页面 hexo generate # 生成静态页面至public目录 hexo server # 启动服务器(默认端口4000，'ctrl+c'关闭server) hexo deploy # 项目部署 hexo help # 查看帮助 hexo version # 查看Hexo的版本 hexo clean # 清除Hexo的缓存 上边的一些命令可以使用简写 hexo n hexo g hexo d hexo s ","date":"2018-04-24","objectID":"/posts/22143.html/:3:0","tags":["Hexo","简单入门"],"title":"Hexo搭建博客教程(1) - 安装环境与本地搭建","uri":"/posts/22143.html/"},{"categories":["Hexo搭建博客教程"],"content":"3.1 本地调试三连 hexo clean hexo g hexo s --debug ","date":"2018-04-24","objectID":"/posts/22143.html/:3:1","tags":["Hexo","简单入门"],"title":"Hexo搭建博客教程(1) - 安装环境与本地搭建","uri":"/posts/22143.html/"},{"categories":["Hexo搭建博客教程"],"content":"3.2 远程部署三连 hexo clean hexo g hexo d 注：在使用部署命令时，需要先用npm安装 hexo-deployer-git 插件： npm install hexo-deployer-git --save\r ","date":"2018-04-24","objectID":"/posts/22143.html/:3:2","tags":["Hexo","简单入门"],"title":"Hexo搭建博客教程(1) - 安装环境与本地搭建","uri":"/posts/22143.html/"},{"categories":["Hexo搭建博客教程"],"content":"四、撰写第一篇博文 Hexo撰写博文也不难，分为 post 和 draft 两种，其中 post 存放在 source/_posts 目录下，draft 存放在 source/_drafts 目录下。 post 和 draft 的区别在于前者会被发布到博客，而后者不会被发布。 ","date":"2018-04-24","objectID":"/posts/22143.html/:4:0","tags":["Hexo","简单入门"],"title":"Hexo搭建博客教程(1) - 安装环境与本地搭建","uri":"/posts/22143.html/"},{"categories":["Hexo搭建博客教程"],"content":"4.1 第一篇文章 hexo n post \"my-first-post\" Hexo会自动在 source/_posts 目录下新建一个名为 my-first-post 的 .md 文件；打开该文件，可以看到： --- title: my-first-post date: 2018-04-21 23:11:30 tags: --- 这是 post 模板自动生成的 YAML 文件头，title 是这篇 post 的标题，可以将其改为 My First Post；date 是创建的日期；tags 是该 post 的标签，可以添加自定义的标签： --- title: My First Post date: 2018-04-21 23:11:30 tags: - demo - first-post --- 接着再进行本地调试三连，就可以看到刚刚写好的博文了。 hexo clean hexo g hexo s --debug ","date":"2018-04-24","objectID":"/posts/22143.html/:4:1","tags":["Hexo","简单入门"],"title":"Hexo搭建博客教程(1) - 安装环境与本地搭建","uri":"/posts/22143.html/"},{"categories":["Hexo搭建博客教程"],"content":"4.1 第一篇草稿 创建命令和前边类似： hexo n draft \"my-first-draft\" 另外草稿的头文件是没有日期的： --- title: my-first-draft tags: --- 草稿文件是不会被 hexo g 命令生成到public目录下的。 ","date":"2018-04-24","objectID":"/posts/22143.html/:4:2","tags":["Hexo","简单入门"],"title":"Hexo搭建博客教程(1) - 安装环境与本地搭建","uri":"/posts/22143.html/"},{"categories":null,"content":"Running Time \r ","date":"2018-04-24","objectID":"/about/:0:0","tags":null,"title":"关于","uri":"/about/"},{"categories":null,"content":"博主相关 ","date":"2018-04-24","objectID":"/about/:1:0","tags":null,"title":"关于","uri":"/about/"},{"categories":null,"content":"近况 17年本科毕业，目前在珠海从事Java开发，码农界萌新 (⌒▽⌒) ","date":"2018-04-24","objectID":"/about/:1:1","tags":null,"title":"关于","uri":"/about/"},{"categories":null,"content":"技能 Java, JavaWeb （性感码农，在线搬砖） ","date":"2018-04-24","objectID":"/about/:1:2","tags":null,"title":"关于","uri":"/about/"},{"categories":null,"content":"联系 email: 1019175915@qq.com github@lewky csdn@lewky_liu cnblogs@yulinlewis ","date":"2018-04-24","objectID":"/about/:1:3","tags":null,"title":"关于","uri":"/about/"},{"categories":null,"content":"随笔 → 戳我查看随笔 ← ","date":"2018-04-24","objectID":"/about/:1:4","tags":null,"title":"关于","uri":"/about/"},{"categories":null,"content":"站点相关 ","date":"2018-04-24","objectID":"/about/:2:0","tags":null,"title":"关于","uri":"/about/"},{"categories":null,"content":"站点及主题版本 hugo: v0.74.2-48565DE6 windows/amd64 BuildDate: 2020-07-17T17:22:50Z\rLoveIt: v0.2.10\r ","date":"2018-04-24","objectID":"/about/:2:1","tags":null,"title":"关于","uri":"/about/"},{"categories":null,"content":"建站日志 → 戳我查看建站日志 ← ","date":"2018-04-24","objectID":"/about/:2:2","tags":null,"title":"关于","uri":"/about/"},{"categories":null,"content":"友情链接 暂时没有友链哟 (ﾉ*･ω･)ﾉ～ 想添加友链可以在下方留言~ \r/* 站点运行时间 */\rfunction show_date_time(){\rwindow.setTimeout(\"show_date_time()\", 1000);\r/* 请修改这里的起始时间 */\rBirthDay=new Date(\"04/24/2018 15:00:00\");\rtoday=new Date();\rtimeold=(today.getTime()-BirthDay.getTime());\rsectimeold=timeold/1000\rsecondsold=Math.floor(sectimeold);\rmsPerDay=24*60*60*1000\re_daysold=timeold/msPerDay\rdaysold=Math.floor(e_daysold);\re_hrsold=(e_daysold-daysold)*24;\rhrsold=setzero(Math.floor(e_hrsold));\re_minsold=(e_hrsold-hrsold)*60;\rminsold=setzero(Math.floor((e_hrsold-hrsold)*60));\rseconds=setzero(Math.floor((e_minsold-minsold)*60));\rdocument.getElementById('days').innerHTML=\"本站已运行\"+daysold+\"天\"+hrsold+\"小时\"+minsold+\"分\"+seconds+\"秒\";\r}\rfunction setzero(i){\rif (i ","date":"2018-04-24","objectID":"/about/:3:0","tags":null,"title":"关于","uri":"/about/"},{"categories":["随笔"],"content":"随笔 就是随手写写的乱七八糟的玩意…… ","date":"2018-04-24","objectID":"/posts/d65a1577.html/:0:0","tags":["随笔","生活"],"title":"随笔","uri":"/posts/d65a1577.html/"},{"categories":["随笔"],"content":"2019-07-01 哈哈，一发十连出了银老板和赫默，爽到！！！ ","date":"2018-04-24","objectID":"/posts/d65a1577.html/:1:0","tags":["随笔","生活"],"title":"随笔","uri":"/posts/d65a1577.html/"},{"categories":["随笔"],"content":"2019-06-08 这周的JOJO简直爽到！尤其是最后的银镇登场bgm，真的炸裂！ ","date":"2018-04-24","objectID":"/posts/d65a1577.html/:2:0","tags":["随笔","生活"],"title":"随笔","uri":"/posts/d65a1577.html/"},{"categories":["随笔"],"content":"2019-05-15 又要开打贸易战了……互联网的又一波失业寒潮。 ","date":"2018-04-24","objectID":"/posts/d65a1577.html/:3:0","tags":["随笔","生活"],"title":"随笔","uri":"/posts/d65a1577.html/"},{"categories":["随笔"],"content":"2019-04-24 好久没更新博客了，这阵子确实忙了很多，人也颓唐了不少，是时候改变了，不能继续丧下去了…… 另外—— 建站一周年纪念！！ ","date":"2018-04-24","objectID":"/posts/d65a1577.html/:4:0","tags":["随笔","生活"],"title":"随笔","uri":"/posts/d65a1577.html/"},{"categories":["随笔"],"content":"2019-04-23 已经连续三天在食堂拿到半价的绿盘子了，可能预示着这阵子会运势上升？晚上买了半个榴莲吃，花了68块大洋，一斤18.8，虽然贵了点，但美味程度确实不错，好吃！ ","date":"2018-04-24","objectID":"/posts/d65a1577.html/:5:0","tags":["随笔","生活"],"title":"随笔","uri":"/posts/d65a1577.html/"},{"categories":["随笔"],"content":"2019-03-07 今天是个神奇的日子。 早上煮的鸡蛋是双黄蛋； 上午同事报喜生了龙凤胎； 中午食堂破天荒给了一对鸡翅； 怎么形容今天呢？简直是JOJO的奇妙冒险级别的日子~ ","date":"2018-04-24","objectID":"/posts/d65a1577.html/:6:0","tags":["随笔","生活"],"title":"随笔","uri":"/posts/d65a1577.html/"},{"categories":["随笔"],"content":"2019-02-19 猿宵节 猿宵节：通常指程序猿通宵写代码的节日 ","date":"2018-04-24","objectID":"/posts/d65a1577.html/:7:0","tags":["随笔","生活"],"title":"随笔","uri":"/posts/d65a1577.html/"},{"categories":["随笔"],"content":"2019-02-18 建站300天纪念！！ ","date":"2018-04-24","objectID":"/posts/d65a1577.html/:8:0","tags":["随笔","生活"],"title":"随笔","uri":"/posts/d65a1577.html/"},{"categories":["随笔"],"content":"2019-02-17 下午看到附近的狗子躺在地上不停往空中踢腿，跟踩单车一样，百度了下也找不到类似的状况，emmm，这狗不会是在瘦腿吧…… ","date":"2018-04-24","objectID":"/posts/d65a1577.html/:9:0","tags":["随笔","生活"],"title":"随笔","uri":"/posts/d65a1577.html/"},{"categories":["随笔"],"content":"2019-02-14 今天是情人节，公司刚好在这天进行开工拜神活动，收到个开工红包，顺带吃了波烤乳猪和烧鸡。这烤乳猪比去年的好吃不少！不沾酱料吃最好，咸咸的脆脆的，沾了白糖后反而很腻。 ","date":"2018-04-24","objectID":"/posts/d65a1577.html/:10:0","tags":["随笔","生活"],"title":"随笔","uri":"/posts/d65a1577.html/"},{"categories":["随笔"],"content":"2019-01-27 时间过得真快，转眼就要回家过春节了，新的一年里也快过去头个月了。 发现自己是真的越发懒散怠惰了，想想去年的这个时候，还心怀高远，精神焕发，再看看如今，去年定下的目标是越发地遥不可及了。 应该怎么有效地调节情绪呢，总觉得自己是个有自知之明却没有自制之力的废材呀。。 ","date":"2018-04-24","objectID":"/posts/d65a1577.html/:11:0","tags":["随笔","生活"],"title":"随笔","uri":"/posts/d65a1577.html/"},{"categories":["随笔"],"content":"2019-01-08 第一次吃牛奶草莓，闻起来确实很香，不过吃起来倒是和普通草莓差不多。 ","date":"2018-04-24","objectID":"/posts/d65a1577.html/:12:0","tags":["随笔","生活"],"title":"随笔","uri":"/posts/d65a1577.html/"},{"categories":["随笔"],"content":"2018-12-19 不知道写点啥，最近一直状态不好，记录下之前写的几句诗歌吧~ 纵心猿，驰意马。 秋风秋雨织秋意，春花春水鉴春光。 ","date":"2018-04-24","objectID":"/posts/d65a1577.html/:13:0","tags":["随笔","生活"],"title":"随笔","uri":"/posts/d65a1577.html/"},{"categories":["随笔"],"content":"2018-11-14 双十一买的戴尔和三只松鼠终于都到了，开心！！ ","date":"2018-04-24","objectID":"/posts/d65a1577.html/:14:0","tags":["随笔","生活"],"title":"随笔","uri":"/posts/d65a1577.html/"},{"categories":["随笔"],"content":"2018-11-04 这个周末看了整整两天的《乌龙闯情关》，还是以前的电视剧好看。剧中的刘病已、霍水仙、许平君、大牛、鸠摩空都让人印象深刻，也知道了故剑情深的典故。 现在各种快餐文化，人心浮躁，还是以前的影视、小说作品让人回味无穷，我不是个怀旧的人，却对过去的一些回忆很有感怀。这些都是宝贵的精神食粮，可能是一首歌，也可能是荧幕中、笔墨下的一个人物，每每带给我鼓舞与勇气。 我也要努力，冲鸭！ ","date":"2018-04-24","objectID":"/posts/d65a1577.html/:15:0","tags":["随笔","生活"],"title":"随笔","uri":"/posts/d65a1577.html/"},{"categories":["随笔"],"content":"2018-10-24 今天是程序员节，在这个日子里，我终于将自己定制的hexo主题正式起名为Beep了~ 1024节日快乐~ ","date":"2018-04-24","objectID":"/posts/d65a1577.html/:16:0","tags":["随笔","生活"],"title":"随笔","uri":"/posts/d65a1577.html/"},{"categories":["随笔"],"content":"2018-10-18 又看了一遍JOJO第四部的boss战，真是百看不厌，爱死JOJO了！ ","date":"2018-04-24","objectID":"/posts/d65a1577.html/:17:0","tags":["随笔","生活"],"title":"随笔","uri":"/posts/d65a1577.html/"},{"categories":["随笔"],"content":"2018-10-14 每周都是等待JOJO新一集的煎熬和畅享JOJO新一集的舒爽…… ","date":"2018-04-24","objectID":"/posts/d65a1577.html/:18:0","tags":["随笔","生活"],"title":"随笔","uri":"/posts/d65a1577.html/"},{"categories":["随笔"],"content":"2018-10-08 《逍遥游》完结了，又追完了一本小说，现在能看的书真的不多了。。 ","date":"2018-04-24","objectID":"/posts/d65a1577.html/:19:0","tags":["随笔","生活"],"title":"随笔","uri":"/posts/d65a1577.html/"},{"categories":["随笔"],"content":"2018-10-07 好久没更新随笔了，这阵子人懒散了好多，肚子也多了几圈，国庆回到家里人人都说我胖了，确实，上班一年我竟然重了二十斤左右。要知道当初大一那会还不到一百斤，瘦的跟猴子似的，现在却已经一百二十多了。 马上就要新的一年了，距离三十大关又进了一步，我时间不多啦，得加把劲践行自己的目标，顺便把肥给减了。。 ","date":"2018-04-24","objectID":"/posts/d65a1577.html/:20:0","tags":["随笔","生活"],"title":"随笔","uri":"/posts/d65a1577.html/"},{"categories":["随笔"],"content":"2018-09-18 今天竟然被老大叫进去开了波会，会议中对我上半年的表现和绩效表示肯定，加薪之余望我能再接再厉。哈哈，还是挺开心的，感觉自己一直以来的努力没有白费，果然单身能促进生产力啊_(:з」∠)_ ","date":"2018-04-24","objectID":"/posts/d65a1577.html/:21:0","tags":["随笔","生活"],"title":"随笔","uri":"/posts/d65a1577.html/"},{"categories":["随笔"],"content":"2018-09-12 今天早上看到唐家三少妻子去世的消息，有些震惊，心情不知道怎么形容，难受又复杂。高中最早接触的网络小说之一就是三少写的光之子，里边男主女主就是化用的他们夫妻两人的名字，到现在还记忆深刻。 曾经受到三少的影响，很想去写书，只是时间无情，人很脆弱。。只能说句，三少，节哀。 ","date":"2018-04-24","objectID":"/posts/d65a1577.html/:22:0","tags":["随笔","生活"],"title":"随笔","uri":"/posts/d65a1577.html/"},{"categories":["随笔"],"content":"2018-09-01 妈蛋啊！！昨晚买的榴莲千层蛋糕，本来是作为第二天早餐的，结果起床一看整个蛋糕都化水了，还发出腐烂的臭味！！我的心在滴血，八块钱的蛋糕就这么没了…… ","date":"2018-04-24","objectID":"/posts/d65a1577.html/:23:0","tags":["随笔","生活"],"title":"随笔","uri":"/posts/d65a1577.html/"},{"categories":["随笔"],"content":"2018-08-27 卧槽，下了一天一夜的雨，第二天下班收衣服时发现上衣有半边被雨水打湿而发霉了…… ","date":"2018-04-24","objectID":"/posts/d65a1577.html/:24:0","tags":["随笔","生活"],"title":"随笔","uri":"/posts/d65a1577.html/"},{"categories":["随笔"],"content":"2018-08-27 加班到九点半下班，赶上下大雨，然后雨伞又开始漏雨，好气哦。 都买了三把雨伞了，怎么还是漏雨的货！ 伞外下大雨，伞内下小雨。 ","date":"2018-04-24","objectID":"/posts/d65a1577.html/:25:0","tags":["随笔","生活"],"title":"随笔","uri":"/posts/d65a1577.html/"},{"categories":["随笔"],"content":"2018-08-17 今天是七夕，emmm 单身汪岁 ","date":"2018-04-24","objectID":"/posts/d65a1577.html/:26:0","tags":["随笔","生活"],"title":"随笔","uri":"/posts/d65a1577.html/"},{"categories":["随笔"],"content":"2018-08-13 自律真的很重要，我要培养自己的自律能力，毕竟已经是叔叔辈了…… ","date":"2018-04-24","objectID":"/posts/d65a1577.html/:27:0","tags":["随笔","生活"],"title":"随笔","uri":"/posts/d65a1577.html/"},{"categories":["随笔"],"content":"2018-08-06 今晚一口气看了《刺客伍六七》这部国产动画，简直爽到！上一部让我看得这么酣畅淋漓的国产动画是《凸变英雄》，之前就经常瞥见刺客伍六七的消息，只是一直都听不起兴趣去看，直到今天无意间点开了第一集，之后就一发不可收拾了，还好没错过。 ","date":"2018-04-24","objectID":"/posts/d65a1577.html/:28:0","tags":["随笔","生活"],"title":"随笔","uri":"/posts/d65a1577.html/"},{"categories":["随笔"],"content":"2018-08-02 建站100天！！！ ","date":"2018-04-24","objectID":"/posts/d65a1577.html/:29:0","tags":["随笔","生活"],"title":"随笔","uri":"/posts/d65a1577.html/"},{"categories":["随笔"],"content":"2018-07-29 趁着这个月还没结束，赶紧开始撸品优购，还是敲完整的一个项目爽快~ ","date":"2018-04-24","objectID":"/posts/d65a1577.html/:30:0","tags":["随笔","生活"],"title":"随笔","uri":"/posts/d65a1577.html/"},{"categories":["随笔"],"content":"2018-07-28 今天去看了《西虹市首富》，挺有趣的，沈腾还是那么好玩，开心麻花街的作品还是让人看得好开心。当初那个春晚小品《扶不扶》真的惊为天人，已经看过十几遍了，O(∩_∩)O哈哈~ ","date":"2018-04-24","objectID":"/posts/d65a1577.html/:31:0","tags":["随笔","生活"],"title":"随笔","uri":"/posts/d65a1577.html/"},{"categories":["随笔"],"content":"2018-07-15 最近发现吃了香蕉后就会胃酸过多，也就是俗称的烧心。百度了下： 香蕉性寒，脾胃虚寒、便溏腹泻者不能多食、生食，胃酸过的多者也不要吃香蕉，香蕉会增加胃酸分泌。所以最好不要空腹吃香蕉。 明明以前吃香蕉都没什么事情，而且还是特地在饭后吃的，看来身体是真的越来越差了，要多锻炼才行。 ","date":"2018-04-24","objectID":"/posts/d65a1577.html/:32:0","tags":["随笔","生活"],"title":"随笔","uri":"/posts/d65a1577.html/"},{"categories":["随笔"],"content":"2018-06-13 喝了这么多年的牛奶才尴尬地发现，原来我的肠胃会对牛奶过敏，一喝牛奶就会拉肚子，以前一直以为是其他原因，没想到是对牛奶过敏，看来以后只能喝酸奶了…… ","date":"2018-04-24","objectID":"/posts/d65a1577.html/:33:0","tags":["随笔","生活"],"title":"随笔","uri":"/posts/d65a1577.html/"},{"categories":["随笔"],"content":"2018-04-24 在CSDN也写了一年的博客了，现在终于有了专属的个人博客了，用来记录自己平日里的感悟和积累~ ","date":"2018-04-24","objectID":"/posts/d65a1577.html/:34:0","tags":["随笔","生活"],"title":"随笔","uri":"/posts/d65a1577.html/"},{"categories":["建站日志"],"content":"Siting Log o(*￣▽￣*)ブ 持续更新中 ","date":"2018-04-24","objectID":"/posts/e62c38c45.html/:0:0","tags":["建站日志"],"title":"建站日志","uri":"/posts/e62c38c45.html/"},{"categories":["建站日志"],"content":"2020-10-09 开始将博客从Hexo迁移到Hugo，决定使用LoveIt主题，并正式将博客部署到了Pages上。 ","date":"2018-04-24","objectID":"/posts/e62c38c45.html/:1:0","tags":["建站日志"],"title":"建站日志","uri":"/posts/e62c38c45.html/"},{"categories":["建站日志"],"content":"2018-12-19 最近发现打开页面略慢略卡，发现是jquery-backstretch的cdn加载不了，原本官网使用的cdn是cloudflare的，现在改成了另一个cdn地址。 于是将jquery-backstretch的cdn修改了官网上最新的，总算变快了。 ","date":"2018-04-24","objectID":"/posts/e62c38c45.html/:2:0","tags":["建站日志"],"title":"建站日志","uri":"/posts/e62c38c45.html/"},{"categories":["建站日志"],"content":"2018-11-16 将鼠标点击产生的文字设为不可选定 ","date":"2018-04-24","objectID":"/posts/e62c38c45.html/:3:0","tags":["建站日志"],"title":"建站日志","uri":"/posts/e62c38c45.html/"},{"categories":["建站日志"],"content":"2018-11-10 解决在适配手机屏幕时，页面右上角的GitHub彩带被覆盖掉的问题。 ","date":"2018-04-24","objectID":"/posts/e62c38c45.html/:4:0","tags":["建站日志"],"title":"建站日志","uri":"/posts/e62c38c45.html/"},{"categories":["建站日志"],"content":"2018-09-18 添加了图片懒加载插件hexo-lazyload-image 出于强迫症，还是关闭了不蒜子的统计功能，目的是为了解决下边的问题二。 ","date":"2018-04-24","objectID":"/posts/e62c38c45.html/:5:0","tags":["建站日志"],"title":"建站日志","uri":"/posts/e62c38c45.html/"},{"categories":["建站日志"],"content":"2018-08-21 最近发现了两个问题： 如果文章不写小标题，是不会生成文章目录的，如果启用了leancloud的阅读计数功能，这时候这篇文章的阅读页面的侧边栏就会失去affix.js的固定定位效果；(该bug在火狐浏览器下偶尔会触发，在360浏览器下百分百触发) 如果启用了不蒜子计数，在360浏览器下如果滚动页面时，侧边栏的底部无法和正文模块的底部持平，侧边栏底部会比正文模块的短一些。该问题在火狐浏览器下不存在。 解决方案： 问题一需要给每篇文章都起至少一个小标题，这样就会自动生成文章目录，也就不存在这个问题了。 也可以选择关闭leancloud的阅读计数功能，重新生成静态页面就行了。 问题二对于强迫症来说很难受，要么关闭不蒜子计数，要么不使用360浏览器。 ","date":"2018-04-24","objectID":"/posts/e62c38c45.html/:6:0","tags":["建站日志"],"title":"建站日志","uri":"/posts/e62c38c45.html/"},{"categories":["建站日志"],"content":"2018-08-18 修改了hexo-neat的压缩选项，优化页面的加载 ","date":"2018-04-24","objectID":"/posts/e62c38c45.html/:7:0","tags":["建站日志"],"title":"建站日志","uri":"/posts/e62c38c45.html/"},{"categories":["建站日志"],"content":"2018-08-17 添加了新的b站头像挂件 添加头像挂件自动刷新功能 ","date":"2018-04-24","objectID":"/posts/e62c38c45.html/:8:0","tags":["建站日志"],"title":"建站日志","uri":"/posts/e62c38c45.html/"},{"categories":["建站日志"],"content":"2018-08-14 去掉了文本首行缩进，首行缩进有个问题：当一个段落内存在换行时，比如使用\u003cbr\u003e，会导致换行后无法缩进，不太好看；找了好久也没找到解决的方法，只能取消文本的首行缩进了。 如果需要首行缩进还是自己手动添加\u0026emsp;\u0026emsp;(全角空格，即对应两个中文空格)…… ","date":"2018-04-24","objectID":"/posts/e62c38c45.html/:9:0","tags":["建站日志"],"title":"建站日志","uri":"/posts/e62c38c45.html/"},{"categories":["建站日志"],"content":"2018-07-30 修改categories page的样式 ","date":"2018-04-24","objectID":"/posts/e62c38c45.html/:10:0","tags":["建站日志"],"title":"建站日志","uri":"/posts/e62c38c45.html/"},{"categories":["建站日志"],"content":"2018-07-26 改善文章目录的换行问题 添加文章不在首页显示的功能：在文件头里添加not_show: true即可启用 ","date":"2018-04-24","objectID":"/posts/e62c38c45.html/:11:0","tags":["建站日志"],"title":"建站日志","uri":"/posts/e62c38c45.html/"},{"categories":["建站日志"],"content":"2018-07-21 添加了404页面 ","date":"2018-04-24","objectID":"/posts/e62c38c45.html/:12:0","tags":["建站日志"],"title":"建站日志","uri":"/posts/e62c38c45.html/"},{"categories":["建站日志"],"content":"2018-07-19 修改代码块diff样式 ","date":"2018-04-24","objectID":"/posts/e62c38c45.html/:13:0","tags":["建站日志"],"title":"建站日志","uri":"/posts/e62c38c45.html/"},{"categories":["建站日志"],"content":"2018-07-10 修改文本标题样式 文本首行缩进两个字符 ","date":"2018-04-24","objectID":"/posts/e62c38c45.html/:14:0","tags":["建站日志"],"title":"建站日志","uri":"/posts/e62c38c45.html/"},{"categories":["建站日志"],"content":"2018-07-07 添加网页标题监听事件 ","date":"2018-04-24","objectID":"/posts/e62c38c45.html/:15:0","tags":["建站日志"],"title":"建站日志","uri":"/posts/e62c38c45.html/"},{"categories":["建站日志"],"content":"2018-06-30 代码块添加复制按钮 ","date":"2018-04-24","objectID":"/posts/e62c38c45.html/:16:0","tags":["建站日志"],"title":"建站日志","uri":"/posts/e62c38c45.html/"},{"categories":["建站日志"],"content":"2018-06-25 修改about页面 ","date":"2018-04-24","objectID":"/posts/e62c38c45.html/:17:0","tags":["建站日志"],"title":"建站日志","uri":"/posts/e62c38c45.html/"},{"categories":["建站日志"],"content":"2018-06-20 使用 hexo-neat 压缩博文插件，优化博客静态资源 ","date":"2018-04-24","objectID":"/posts/e62c38c45.html/:18:0","tags":["建站日志"],"title":"建站日志","uri":"/posts/e62c38c45.html/"},{"categories":["建站日志"],"content":"2018-06-16 添加 Font Awesome 4.6.2的CDN，支持使用font awesome4或5 友情链接里添加恶搞页面 关于页面添加站点运行时间 ","date":"2018-04-24","objectID":"/posts/e62c38c45.html/:19:0","tags":["建站日志"],"title":"建站日志","uri":"/posts/e62c38c45.html/"},{"categories":["建站日志"],"content":"2018-06-16 修改阅读全文按钮样式 页脚爱心图形动画 ","date":"2018-04-24","objectID":"/posts/e62c38c45.html/:20:0","tags":["建站日志"],"title":"建站日志","uri":"/posts/e62c38c45.html/"},{"categories":["建站日志"],"content":"2018-06-16 修改站点标题样式 修改页脚样式 添加站点背景图片轮播 文章摘要添加标签 ","date":"2018-04-24","objectID":"/posts/e62c38c45.html/:21:0","tags":["建站日志"],"title":"建站日志","uri":"/posts/e62c38c45.html/"},{"categories":["建站日志"],"content":"2018-06-14 修改文章标签样式 ","date":"2018-04-24","objectID":"/posts/e62c38c45.html/:22:0","tags":["建站日志"],"title":"建站日志","uri":"/posts/e62c38c45.html/"},{"categories":["建站日志"],"content":"2018-06-12 使用 sitemap 和 baidusitemap ","date":"2018-04-24","objectID":"/posts/e62c38c45.html/:23:0","tags":["建站日志"],"title":"建站日志","uri":"/posts/e62c38c45.html/"},{"categories":["建站日志"],"content":"2018-06-10 改用来必力作为评论系统 修改鼠标指针 修改引用块样式 ","date":"2018-04-24","objectID":"/posts/e62c38c45.html/:24:0","tags":["建站日志"],"title":"建站日志","uri":"/posts/e62c38c45.html/"},{"categories":["建站日志"],"content":"2018-06-07 添加友链并修改其样式 ","date":"2018-04-24","objectID":"/posts/e62c38c45.html/:25:0","tags":["建站日志"],"title":"建站日志","uri":"/posts/e62c38c45.html/"},{"categories":["建站日志"],"content":"2018-06-06 启用 Gitment ","date":"2018-04-24","objectID":"/posts/e62c38c45.html/:26:0","tags":["建站日志"],"title":"建站日志","uri":"/posts/e62c38c45.html/"},{"categories":["建站日志"],"content":"2018-06-05 开启文章目录显示功能，替换掉显示错误的FontAwesome图标 ","date":"2018-04-24","objectID":"/posts/e62c38c45.html/:27:0","tags":["建站日志"],"title":"建站日志","uri":"/posts/e62c38c45.html/"},{"categories":["建站日志"],"content":"2018-06-04 CDN有时候加载比较慢，所以去掉原本引入的 Font Awesome 4 和 Font Awesome Free CDN，直接将下载好的 Font Awesome 5 解压复制到 lib 目录下 这里吐槽一下，由于 Font Awesome 从版本4升级到5修改了很多图标的名称，所以我花了一个多小时的时间去一个个替换这些改动的图标，累死… ","date":"2018-04-24","objectID":"/posts/e62c38c45.html/:28:0","tags":["建站日志"],"title":"建站日志","uri":"/posts/e62c38c45.html/"},{"categories":["建站日志"],"content":"2018-06-03 添加头像旋转 ","date":"2018-04-24","objectID":"/posts/e62c38c45.html/:29:0","tags":["建站日志"],"title":"建站日志","uri":"/posts/e62c38c45.html/"},{"categories":["建站日志"],"content":"2018-06-01 去掉脚注超链的底部线条 ","date":"2018-04-24","objectID":"/posts/e62c38c45.html/:30:0","tags":["建站日志"],"title":"建站日志","uri":"/posts/e62c38c45.html/"},{"categories":["建站日志"],"content":"2018-05-31 添加 custom.js 文件 添加鼠标点击文字特效 添加头像挂件点击事件 ","date":"2018-04-24","objectID":"/posts/e62c38c45.html/:31:0","tags":["建站日志"],"title":"建站日志","uri":"/posts/e62c38c45.html/"},{"categories":["建站日志"],"content":"2018-05-30 设置文章摘要里的图片的最大宽度 ","date":"2018-04-24","objectID":"/posts/e62c38c45.html/:32:0","tags":["建站日志"],"title":"建站日志","uri":"/posts/e62c38c45.html/"},{"categories":["建站日志"],"content":"2018-05-27 缩小文章摘要里标题和正文的间距 ","date":"2018-04-24","objectID":"/posts/e62c38c45.html/:33:0","tags":["建站日志"],"title":"建站日志","uri":"/posts/e62c38c45.html/"},{"categories":["建站日志"],"content":"2018-05-25 修改预格式代码块(用tab键插入的代码块)的样式 ","date":"2018-04-24","objectID":"/posts/e62c38c45.html/:34:0","tags":["建站日志"],"title":"建站日志","uri":"/posts/e62c38c45.html/"},{"categories":["建站日志"],"content":"2018-05-17 重新修改了头像挂件样式 修改站点标题样式 修改菜单栏样式 ","date":"2018-04-24","objectID":"/posts/e62c38c45.html/:35:0","tags":["建站日志"],"title":"建站日志","uri":"/posts/e62c38c45.html/"},{"categories":["建站日志"],"content":"2018-05-16 将头部彩带图片保存到本地，避免因无法通过访问该图片(被墙)而显示不出来 ","date":"2018-04-24","objectID":"/posts/e62c38c45.html/:36:0","tags":["建站日志"],"title":"建站日志","uri":"/posts/e62c38c45.html/"},{"categories":["建站日志"],"content":"2018-05-14 修改头像样式并添加了头像挂件(可耻地偷了波b站的头像挂件) ( ゜- ゜)つロ 重修修改了加密文章的js代码，并将文章超链的打开方式复原 (눈_눈) ","date":"2018-04-24","objectID":"/posts/e62c38c45.html/:37:0","tags":["建站日志"],"title":"建站日志","uri":"/posts/e62c38c45.html/"},{"categories":["建站日志"],"content":"2018-05-13 修改文章超链的打开方式，添加文章置顶功能 修改字体大小，关闭文章目录显示序号功能 添加 by-nc-sa 许可协议，回到顶部按钮显示百分比 修改文章内的超链样式、行内代码块的样式、回到顶部按钮样式 启用搜索功能、顶部加载条 去掉图片边框 ","date":"2018-04-24","objectID":"/posts/e62c38c45.html/:38:0","tags":["建站日志"],"title":"建站日志","uri":"/posts/e62c38c45.html/"},{"categories":["建站日志"],"content":"2018-05-12 文章启用字数统计、阅读时长，修改其显示的样式 使用 Font Awesome Free CDN ( upgrade from version 4 to 5 ) 添加文章加密功能 指定 Markdown 的解析器 修改 Hexo 永久链接的默认格式 ","date":"2018-04-24","objectID":"/posts/e62c38c45.html/:39:0","tags":["建站日志"],"title":"建站日志","uri":"/posts/e62c38c45.html/"},{"categories":["建站日志"],"content":"2018-05-11 页面右上角添加 Fork me on GitHub ","date":"2018-04-24","objectID":"/posts/e62c38c45.html/:40:0","tags":["建站日志"],"title":"建站日志","uri":"/posts/e62c38c45.html/"},{"categories":["建站日志"],"content":"2018-05-09 修改 scaffolds 目录下的 post/draft.md 模板，并添加自定义的模板文件 ","date":"2018-04-24","objectID":"/posts/e62c38c45.html/:41:0","tags":["建站日志"],"title":"建站日志","uri":"/posts/e62c38c45.html/"},{"categories":["建站日志"],"content":"2018-05-07 首页文章显示预览，添加字数统计和阅读时长 ","date":"2018-04-24","objectID":"/posts/e62c38c45.html/:42:0","tags":["建站日志"],"title":"建站日志","uri":"/posts/e62c38c45.html/"},{"categories":["建站日志"],"content":"2018-05-01 添加建站日志 ","date":"2018-04-24","objectID":"/posts/e62c38c45.html/:43:0","tags":["建站日志"],"title":"建站日志","uri":"/posts/e62c38c45.html/"},{"categories":["建站日志"],"content":"2018-04-30 启用 tags 和 categories 菜单 ","date":"2018-04-24","objectID":"/posts/e62c38c45.html/:44:0","tags":["建站日志"],"title":"建站日志","uri":"/posts/e62c38c45.html/"},{"categories":["建站日志"],"content":"2018-04-24 使用 Hexo 搭建个人博客 ","date":"2018-04-24","objectID":"/posts/e62c38c45.html/:45:0","tags":["建站日志"],"title":"建站日志","uri":"/posts/e62c38c45.html/"},{"categories":["影评"],"content":" ReadyPlayerOne \" ReadyPlayerOne 这部电影国内译名又叫头号玩家、玩家一号，讲述的是在未来人们为了躲避一团糟的现实而沉迷于一个名为绿洲的现实虚拟游戏。 虽然这部电影并没有直接传达什么正能量的道理之类的，但是这部3D电影所展现出来的绿洲的奇妙与各种彩蛋却是令人看得目不暇接、直呼过瘾。这绝对是一部值得去电影院大饱眼福的爽快作品！ ","date":"2018-03-31","objectID":"/posts/23475.html/:0:0","tags":["影评","生活"],"title":"《Ready Player One》观后感","uri":"/posts/23475.html/"},{"categories":["影评"],"content":" 小萝莉的猴神大叔 \" 小萝莉的猴神大叔 今天去看了这部评分高达9.6分的印度电影，确实是挺好看的。这是讲述一个印度摩罗神信徒在没有护照和签证的情况下，不惜越过边境也要坚持将一个异国走失的哑巴小女孩送回巴基斯坦的父母家里的故事。印巴两国之间的仇恨，迥异的宗教信仰、森严的种姓制度都令我印象深刻。 就算是宗教信仰不同，也不应当局限于各自的神明教义，神明传播于世间的是爱，而不是仇恨，不同的宗教信仰，也是有着共通的点。而上一代人的仇恨，也不应归结到下一代的孩子身上。仇恨的故事固然吸引眼球，但是爱的故事更应该被关注传颂。 对于印巴两国的大人来说，对方即是邪恶，但是战争本就如此，不存在绝对的正义与邪恶，只有恪守信仰、遵从心中那杆爱与公正的天秤的一方，才是真正无愧于心的正义者。 ","date":"2018-03-17","objectID":"/posts/73.html/:0:0","tags":["影评","生活"],"title":"《小萝莉的猴神大叔》观后感","uri":"/posts/73.html/"}]